{"version":3,"sources":["components/Header.js","components/AddSigns.js","components/Sign.js","components/AllSigns.js","components/Main.js","reducer/initialState.js","reducer/MainReducer.js","reducer/store.js","App.js","serviceWorker.js","index.js"],"names":["connect","state","Count","props","react_default","a","createElement","style","headerStyle","background","color","textAlign","padding","AddSigns","onSubmit","e","preventDefault","_this","title","addNewSigns","changeText","onChange","target","value","toUpperCase","display","this","type","placeholder","name","flex","className","Component","dispatcher","text","Sign","incrementCount","sign","id","decrementCount","deleteSign","count","btnStyle","onClick","marginRight","marginLeft","border","borderRadius","cursor","float","Allsigns","window","confirm","_this2","Signs","map","includes","filterValue","Sign_Sign","key","signs","Main","components_Header","components_AddSigns","AllSigns","initialState","Value","MainReducer","arguments","length","undefined","action","Object","objectSpread","new_sign","uuid","v4","update_sign","filter","updated_signs","concat","toConsumableArray","delete_signs","decremented_signs","store","createStore","App","es","components_Main","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.06616804.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nfunction Header(props){\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1>Signs Inventory </h1>\r\n      <h4>Total Signs: {props.Count}</h4>\r\n      \r\n    </header>\r\n  )\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    Count: state.Count,\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n)(Header)\r\n\r\n\r\n\r\nconst headerStyle = {\r\n  background: '#333',\r\n  color: '#fff',\r\n  textAlign: 'center',\r\n  padding: '5px'\r\n}\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nclass AddSigns extends Component {\r\n\r\n    onSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n        if(this.props.title !== ''){\r\n            this.props.addNewSigns(this.props.title)      \r\n            this.props.changeText('')  \r\n       }\r\n\r\n        \r\n    }\r\n    onChange =(e) => {\r\n        this.props.changeText(e.target.value.toUpperCase())\r\n    }\r\n  render(){\r\n    return (\r\n        <form style ={{display:'flex', padding: '7px'}} onSubmit = {this.onSubmit} > \r\n                <input type='input' placeholder ='Type Sign Name' onChange={this.onChange}\r\n                name ='title' value = {this.props.title} style ={{flex:5}}/>\r\n                <input type=\"submit\" value= \"Add / update Signs\" className = \"btn\" style={{flex:'2'}} />\r\n                \r\n        </form>\r\n       \r\n    )\r\n }\r\n}\r\nconst mapStateToProps = state => {\r\n    return{\r\n            title: state.title,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatcher => {\r\n    return{\r\n        changeText: (text) => dispatcher({type: 'changeText', title:text}),\r\n        addNewSigns: (text) => dispatcher({type: 'addNewSigns', title:text})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddSigns)","import React, { Component } from 'react'\r\n\r\nimport './Sign.css';\r\n\r\nexport default class Sign extends Component {\r\n\r\n    incrementCount = (e) => {\r\n       // console.log(this.props.sign.count)\r\n        this.props.incrementCount(this.props.sign.id);\r\n    }\r\n\r\n    decrementCount = (e) => {\r\n        this.props.decrementCount(this.props.sign.id);\r\n       // this.props.decrementCount(e.sign.id);\r\n    }\r\n    deleteSign = (e) => {\r\n        this.props.deleteSign(this.props.sign.id,this.props.sign.count);\r\n       // this.props.decrementCount(e.sign.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div style ={{padding:'5px',display:'flex'}}>\r\n            <div style ={{flex:1,}} id='delete'>\r\n                    <button style ={btnStyle}\r\n                            onClick = {this.deleteSign}\r\n                    > x </button>  \r\n            </div>\r\n            <div style ={{flex:5}}>{this.props.sign.name}</div>\r\n            <div style ={{flex:2}} id='delete'>\r\n                    <button style ={{padding:'5px',marginRight:'10px'}} onClick = {this.incrementCount}> + </button>\r\n                    {this.props.sign.count}\r\n                    <button style = {{padding:'5px',marginRight:'5px',marginLeft:'10px'}}\r\n                            onClick = {this.decrementCount}\r\n                    > - </button>\r\n            </div>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\nconst mapDispatchToProps = dispatcher => {\r\n    return{\r\n        incrementCount: (id) => dispatcher({type: 'incrementCount', id:id}),\r\n        decrementCount: (id) => dispatcher({type: 'decrementCount', id:id})\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Sign)\r\n*/\r\n\r\nconst btnStyle = {\r\n    background: '#ff0000',\r\n    color: '#fff',\r\n    border: 'none',\r\n    marginRight:'15px',\r\n    padding: '5px 9px',\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    float: 'right'\r\n  }","import React, { Component } from 'react'\r\nimport Sign from './Sign'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Allsigns extends Component {\r\n\r\n    incrementCount = (id) =>{\r\n        this.props.incrementCount(id)\r\n    }\r\n    decrementCount = (id) =>{\r\n        this.props.decrementCount(id)\r\n    }\r\n    deleteSign = (id,count) =>{\r\n        const confirmation = window.confirm(\"This will permanently delete the entry. \\n Are you sure?\");\r\n        if(confirmation){\r\n                this.props.deleteSign(id,count)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n\r\n            this.props.Signs.map((sign) => \r\n                (sign.name.includes(this.props.filterValue)) ? (<Sign sign = {sign}  key={sign.id} incrementCount={this.incrementCount} decrementCount={this.decrementCount} \r\n                    deleteSign={this.deleteSign}/>)\r\n                : null\r\n             )\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        Signs: state.signs,\r\n        filterValue: state.title\r\n    }\r\n  }\r\n\r\nconst mapDispatchToProps = dispatcher => {\r\n    return{\r\n        incrementCount: (id) => dispatcher({type: 'incrementCount', id:id}),\r\n        decrementCount: (id) => dispatcher({type: 'decrementCount', id:id}),\r\n        deleteSign: (id,count) =>      dispatcher({type: 'deleteSign', id:id,count:count})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Allsigns);","import React, {Component} from 'react';\r\nimport Header from './Header'\r\nimport AddSigns from './AddSigns'\r\nimport AllSigns from './AllSigns'\r\nimport '../styles/Main.css';\r\n\r\nclass Main extends Component {\r\n\r\n  render(){\r\n      return (\r\n        <div className=\"App\">\r\n          <Header/>\r\n          <AddSigns />\r\n          <AllSigns />\r\n            \r\n\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Main;","const initialState = {\r\n    Value: '',\r\n    title:'',\r\n    Count: 14,\r\n    signs : [ \r\n      {\r\n        name:\"EVENT PARKING\",\r\n        count:8,\r\n        id:1\r\n      },\r\n      {\r\n        name:\"EVENT PARKING RIGHT\",\r\n        count:1,\r\n        id:2\r\n      },\r\n      {\r\n        name:\"EVENT PARKING LEFT\",\r\n        count:5,\r\n        id:3\r\n      }\r\n    ] \r\n  } \r\n  \r\n  export default initialState;","import initialState from './initialState'\r\nimport uuid from 'uuid';\r\n\r\nconst MainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n    case 'changeText':\r\n       // console.log(action);\r\n        return { ...state, title: action.title }\r\n\r\n    case 'addNewSigns':\r\n        let new_sign = { \r\n            name :action.title,\r\n            count: 1,\r\n            id :  uuid.v4()\r\n         }\r\n        let update_sign = state.signs.filter((signs)=> signs.name === action.title )\r\n        if(!update_sign.length){\r\n                //  setState({signs:[...this.state.signs,new_sign], Count:this.state.Count+1})\r\n                  return { ...state,signs:[...state.signs,new_sign],Count:state.Count+1,  }\r\n        }\r\n        else{\r\n            let updated_signs = state.signs.map((sign)=>{\r\n                if(update_sign[0].id === sign.id){\r\n                    sign.count = sign.count+1;\r\n                }\r\n                return sign;\r\n             }\r\n            )\r\n            //console.log(updated_signs)\r\n            \r\n            return { ...state,signs:updated_signs, Count:state.Count+1 }\r\n        }\r\n\r\n    case 'deleteSign':\r\n            let delete_signs = state.signs.filter((sign)=>(\r\n                    action.id !== sign.id )\r\n                     \r\n                )\r\n                //console.log(updated_signs)\r\n                \r\n        return { ...state,signs:delete_signs , Count:state.Count-action.count}\r\n                 \r\n\r\n    case 'incrementCount':\r\n        let updated_signs = state.signs.map((sign)=>{\r\n            if(action.id === sign.id){\r\n                sign.count = sign.count+1;\r\n            }\r\n            return sign;\r\n         }\r\n        )\r\n        //console.log(updated_signs)\r\n        \r\n        return { ...state,signs:updated_signs, Count:state.Count+1 }\r\n        \r\n    case 'decrementCount':\r\n        let Count = state.Count;\r\n        let decremented_signs = state.signs.map((sign)=>{\r\n            if(action.id === sign.id && sign.count >= 1 ){\r\n                sign.count = sign.count-1;\r\n                Count = Count - 1;\r\n              }\r\n                  return sign;\r\n                }\r\n            )\r\n            \r\n                \r\n        return { ...state,signs:decremented_signs, Count:Count }\r\n           \r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\n\r\nexport default MainReducer;","\r\nimport MainReducer from './MainReducer'\r\nimport { createStore } from 'redux';\r\n\r\nconst store = createStore(MainReducer)\r\nexport default store;","import React from 'react';\nimport Main from './components/Main'\nimport store from './reducer/store'\nimport { Provider } from 'react-redux';\n\n\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n            <Main />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}