{"version":3,"sources":["components/Header.js","components/AddSigns.js","components/Sign.js","components/AllSigns.js","components/Main.js","firebase-redux/firebaseConfig.js","reducer/initialState.js","firebase-redux/MainReducer.js","firebase-redux/reducers.js","firebase-redux/store.js","App.js","serviceWorker.js","index.js"],"names":["compose","connect","state","categoriesCount","count","firestore","ordered","Counts","Count","CategoriesCount","firestoreConnect","props","collection","doc","react_default","a","createElement","style","headerStyle","onClick","window","print","background","color","textAlign","padding","AddSigns","onSubmit","e","preventDefault","_this","title","new_id","uuid","v4","console","log","add","name","update","changeText","onChange","target","value","toUpperCase","display","height","this","type","placeholder","flex","className","Component","local","dispatcher","text","addNewSigns","Sign","incrementCount","sign","id","decrementCount","deleteSign","btnStyle","marginRight","marginLeft","border","borderRadius","cursor","float","Allsigns","confirm","delete","_this2","Loading","Signs","map","includes","filterValue","Sign_Sign","key","data","loading","allSigns","test","Main","components_Header","components_AddSigns","AllSigns","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initialState","Value","signs","MainReducer","arguments","length","undefined","action","Object","objectSpread","new_sign","update_sign","filter","updated_signs","concat","toConsumableArray","delete_signs","decremented_signs","rootReducer","combineReducers","firebase","firebaseReducer","firestoreReducer","initializeApp","enhancers","reduxFirestore","reactReduxFirebase","userProfile","useFirestoreForProfile","composedEnhancers","apply","store","createStore","App","es","components_Main","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.296c32be.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\n//import { firebaseConnect } from 'react-redux-firebase'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\n\r\n//<button onClick = {() => {window.print() }}>Print</button>\r\nfunction Header(props){\r\n \r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1>Signs Inventory dxfghjk </h1>\r\n      <h4>Total Signs:  {props.Count} | Categories: { props.CategoriesCount} </h4>\r\n      <button onClick = {() => { window.print()\r\n    }}>Print</button>\r\n      \r\n    </header>\r\n  )\r\n}\r\nconst mapStateToProps = state => {\r\n  let categoriesCount = 0;\r\n  let count = 0;\r\n  if(state.firestore.ordered.Counts != null ){\r\n    count = state.firestore.ordered.Counts[0].Count;\r\n    categoriesCount = state.firestore.ordered.Counts[0].CategoriesCount;\r\n  }\r\n  return {\r\n    Count:  count,\r\n    CategoriesCount : categoriesCount,\r\n  //  Test:state.firestore\r\n  }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps),\r\nfirestoreConnect((props) => {\r\n    return [\r\n      {\r\n        collection: 'Counts',\r\n        doc:'all'\r\n      }\r\n    ]\r\n  })\r\n)(Header)\r\n\r\n\r\nconst headerStyle = {\r\n  background: '#333',\r\n  color: '#fff',\r\n  textAlign: 'center',\r\n  padding: '5px'\r\n}\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport uuid from 'uuid';\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\nclass AddSigns extends Component {\r\n\r\n    onSubmit = (e) => {\r\n        \r\n        e.preventDefault();\r\n        //console.log(\"ddd\",this.props.title)\r\n        if(this.props.title !== ''){\r\n          //  this.props.addNewSigns(this.props.title)  \r\n           // let data = this.props.title ;\r\n            //console.log(this.props.title)\r\n             let new_id = uuid.v4();\r\n             console.log(new_id)\r\n              this.props.firestore.add(\r\n                { collection: 'allSigns',\r\n                 //doc:'ssss'\r\n                },\r\n                {\r\n                 \r\n                  name: this.props.title,\r\n                  count:1,\r\n                  //id: new_id\r\n                }\r\n              ) ;\r\n\r\n              this.props.firestore.update(\r\n                { collection: 'Counts',\r\n                  doc:'all' },\r\n                {\r\n                  Count:  this.props.count+1,\r\n                  CategoriesCount:  this.props.CategoriesCount+1,\r\n\r\n                }\r\n              )\r\n            this.props.changeText('')  \r\n       }\r\n\r\n        \r\n    }\r\n    onChange =(e) => {\r\n        \r\n        this.props.changeText(e.target.value.toUpperCase())\r\n    }\r\n  render(){\r\n    return (\r\n        <form style ={{display:'flex', padding: '7px',height:'45px'}} onSubmit = {this.onSubmit} > \r\n                <input type='input' placeholder ='Type Sign Name' onChange={this.onChange}\r\n                name ='title' value = {this.props.title} style ={{flex:5}}/>\r\n                <input type=\"submit\" value= \"Add / update Signs\" className = \"btn\" style={{flex:'2'}} />\r\n                \r\n        </form>\r\n       \r\n    )\r\n }\r\n}\r\nconst mapStateToProps = state => {\r\n    let count = 0;\r\n    let categoriesCount = 0;\r\n   if(state.firestore.ordered.Counts != null ){\r\n    count = state.firestore.ordered.Counts[0].Count;\r\n    categoriesCount = state.firestore.ordered.Counts[0].CategoriesCount;\r\n   }\r\n    return{\r\n        count: count,\r\n        CategoriesCount : categoriesCount,\r\n            title: state.local.title,\r\n            \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatcher => {\r\n    return{\r\n        changeText: (text) => dispatcher({type: 'changeText', title:text}),\r\n        addNewSigns: (text) => dispatcher({type: 'addNewSigns', title:text})\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps,mapDispatchToProps),firestoreConnect(\r\n    (props) => {\r\n        return [\r\n          {\r\n            collection: 'Counts',\r\n            doc:'all'\r\n          }\r\n        ]\r\n      }\r\n))(AddSigns)","import React, { Component } from 'react'\r\n\r\nimport './Sign.css';\r\n\r\nexport default class Sign extends Component {\r\n\r\n    incrementCount = (e) => {\r\n       // console.log(this.props.sign.count)\r\n        this.props.incrementCount(this.props.sign.id,this.props.sign.count);\r\n    }\r\n\r\n    decrementCount = (e) => {\r\n        this.props.decrementCount(this.props.sign.id,this.props.sign.count);\r\n       // this.props.decrementCount(e.sign.id);\r\n    }\r\n    deleteSign = (e) => {\r\n        this.props.deleteSign(this.props.sign.id,this.props.sign.count);\r\n       // this.props.decrementCount(e.sign.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div style ={{padding:'5px',display:'flex'}}>\r\n            <div style ={{flex:1,}} id='delete'>\r\n                    <button style ={btnStyle}\r\n                            onClick = {this.deleteSign}\r\n                    > x </button>  \r\n            </div>\r\n            <div style ={{flex:5}}>{this.props.sign.name}</div>\r\n            <div style ={{flex:2}} id='delete'>\r\n                    <button style ={{padding:'5px',marginRight:'10px'}} onClick = {this.incrementCount}> + </button>\r\n                    {this.props.sign.count}\r\n                    <button style = {{padding:'5px',marginRight:'5px',marginLeft:'10px'}}\r\n                            onClick = {this.decrementCount}\r\n                    > - </button>\r\n            </div>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\nconst mapDispatchToProps = dispatcher => {\r\n    return{\r\n        incrementCount: (id) => dispatcher({type: 'incrementCount', id:id}),\r\n        decrementCount: (id) => dispatcher({type: 'decrementCount', id:id})\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Sign)\r\n*/\r\n\r\nconst btnStyle = {\r\n    background: '#ff0000',\r\n    color: '#fff',\r\n    border: 'none',\r\n    marginRight:'15px',\r\n    padding: '5px 9px',\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    float: 'right'\r\n  }","import React, { Component } from 'react'\r\nimport Sign from './Sign'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\n\r\nclass Allsigns extends Component {\r\n\r\n    incrementCount = (id,count) =>{\r\n        this.props.incrementCount(id)\r\n        this.props.firestore.update(\r\n        {  collection: 'allSigns',\r\n            doc:id },\r\n        {   \r\n            count:  count+1,\r\n            //  CategoriesCount:  this.props.CategoriesCount-1,\r\n        })\r\n                \r\n        this.props.firestore.update(\r\n                { collection: 'Counts',\r\n                doc:'all' },\r\n                {\r\n                Count:  this.props.Count+1,\r\n            //      CategoriesCount:  this.props.CategoriesCount,\r\n        })\r\n    }\r\n    decrementCount = (id,count) =>{\r\n       // this.props.decrementCount(id)\r\n      // console.log(id,count)\r\n       if(count>0){\r\n                    this.props.firestore.update(\r\n                        {  collection: 'allSigns',\r\n                        doc:id },\r\n                        { \r\n                        \r\n                        count:  count-1,\r\n                        //  CategoriesCount:  this.props.CategoriesCount-1,\r\n\r\n                        })\r\n                        \r\n               this.props.firestore.update(\r\n                { collection: 'Counts',\r\n                  doc:'all' },\r\n                {\r\n                  Count:  this.props.Count-1,\r\n            //      CategoriesCount:  this.props.CategoriesCount,\r\n\r\n                })\r\n        }\r\n    }\r\n    deleteSign = (id,count) =>{\r\n        const confirmation = window.confirm(\"This will permanently delete the entry. \\n Are you sure?\");\r\n        if(confirmation){\r\n               // this.props.deleteSign(id,count)\r\n              // console.log(id)\r\n               this.props.firestore.delete( { collection: 'allSigns',\r\n               doc:id\r\n               })\r\n\r\n               this.props.firestore.update(\r\n                { collection: 'Counts',\r\n                  doc:'all' },\r\n                {\r\n                  Count:  this.props.Count-count,\r\n                  CategoriesCount:  this.props.CategoriesCount-1,\r\n\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        //console.log(this.props.Loading);\r\n       // console.log(this.props.test.ordered.allSigns);\r\n        //console.log(\"orig\",this.props.Signs);\r\n        if(this.props.Loading){\r\n            return <h3>Loading....</h3>\r\n        }\r\n        else{\r\n        return (\r\n                \r\n                //this.props.Loading &&\r\n                    this.props.Signs.map((sign) => \r\n                        (sign.name.includes(this.props.filterValue)) ? (<Sign sign = {sign}  key={sign.id} incrementCount={this.incrementCount} decrementCount={this.decrementCount} \r\n                            deleteSign={this.deleteSign}/>)\r\n                        : null\r\n                    )\r\n                     \r\n                );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    let data = [ ];\r\n    let loading = true;\r\n    let categoriesCount = 0;\r\n    let count = 0;\r\n\r\n    if(state.firestore.ordered.allSigns != null ){\r\n        data = state.firestore.ordered.allSigns;\r\n        count = state.firestore.ordered.Counts[0].Count;\r\n        categoriesCount = state.firestore.ordered.Counts[0].CategoriesCount;\r\n        loading = false ;\r\n        \r\n    }\r\n    return {\r\n       // Signs: state.local.signs,\r\n        Signs: data,\r\n        Loading: loading,\r\n        filterValue: state.local.title,\r\n        Count:  count,\r\n        CategoriesCount : categoriesCount,\r\n        test:state.firestore\r\n    }\r\n  }\r\n\r\nconst mapDispatchToProps = dispatcher => {\r\n    return{\r\n        incrementCount: (id) => dispatcher({type: 'incrementCount', id:id}),\r\n        decrementCount: (id) => dispatcher({type: 'decrementCount', id:id}),\r\n        deleteSign: (id,count) =>      dispatcher({type: 'deleteSign', id:id,count:count})\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps,mapDispatchToProps),firestoreConnect(\r\n    (props) => {\r\n        return [\r\n          {\r\n            collection: 'allSigns',\r\n            \r\n          }\r\n        ]\r\n      }\r\n))(Allsigns);","import React, {Component} from 'react';\r\nimport Header from './Header'\r\nimport AddSigns from './AddSigns'\r\nimport AllSigns from './AllSigns'\r\nimport '../styles/Main.css';\r\n\r\nclass Main extends Component {\r\n\r\n  render(){\r\n      return (\r\n        <div className=\"App\">\r\n          <Header/>\r\n          <AddSigns />\r\n          <AllSigns />\r\n            \r\n          { /* */}\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Main;","const firebaseConfig = {\r\n    apiKey: \"AIzaSyCwTimQLdqmQv72yp-ZS42Kh1RHcHmtjXE\",\r\n    authDomain: \"client123-673fc.firebaseapp.com\",\r\n    databaseURL: \"https://client123-673fc.firebaseio.com\",\r\n    projectId: \"client123-673fc\",\r\n    storageBucket: \"client123-673fc.appspot.com\",\r\n    messagingSenderId: \"702860724566\",\r\n    appId: \"1:702860724566:web:66b356175fa5d04d\"\r\n  };\r\n  \r\n  export default firebaseConfig","//import {getSigns} from '../firebase/firebase'\r\n\r\n\r\n  const initialState = {        \r\n                Value: '',\r\n                title:'', \r\n                Count:14,\r\n                CategoriesCount:3,\r\n                signs : [ \r\n                  {\r\n                    name:\"EVENT PARKING\",\r\n                    count:8,\r\n                    id:1\r\n                  },\r\n                  {\r\n                    name:\"EVENT PARKING RIGHT\",\r\n                    count:1,\r\n                    id:2\r\n                  },\r\n                  {\r\n                    name:\"EVENT PARKING LEFT\",\r\n                    count:5,\r\n                    id:3\r\n                  }\r\n                ],\r\n\r\n          }\r\n  \r\n  export default initialState;","import initialState from '../reducer/initialState'\r\nimport uuid from 'uuid';\r\n\r\n\r\nconst MainReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n    case 'changeText':\r\n       // console.log(action);\r\n       \r\n        return { ...state, title: action.title }\r\n\r\n    case 'addNewSigns':\r\n        let new_sign = { \r\n            name :action.title,\r\n            count: 1,\r\n            id :  uuid.v4()\r\n         }\r\n        let update_sign = state.signs.filter((signs)=> signs.name === action.title )\r\n        if(!update_sign.length){\r\n                //  setState({signs:[...this.state.signs,new_sign], Count:this.state.Count+1})\r\n                 // UpdateSign([...state.signs,new_sign],state.Count+1,state.CategoriesCount+1);\r\n                  return { ...state,signs:[...state.signs,new_sign],Count:state.Count+1,  CategoriesCount: state.CategoriesCount+ 1  }\r\n        }\r\n        else{\r\n            let updated_signs = state.signs.map((sign)=>{\r\n                if(update_sign[0].id === sign.id){\r\n                    sign.count = sign.count+1;\r\n                }\r\n                return sign;\r\n             }\r\n            )\r\n            //console.log(updated_signs)\r\n           // UpdateSign(updated_signs,state.Count+1,state.CategoriesCount);\r\n            return { ...state,signs:updated_signs, Count:state.Count+1 }\r\n        }\r\n\r\n    case 'deleteSign':\r\n            let delete_signs = state.signs.filter((sign)=>(\r\n                    action.id !== sign.id )\r\n                     \r\n                )\r\n                //console.log(updated_signs)\r\n      //  UpdateSign(delete_signs,  state.Count-action.count  ,state.CategoriesCount-1);         \r\n        return { ...state,signs:delete_signs , Count:state.Count-action.count,CategoriesCount: state.CategoriesCount-1 }\r\n                 \r\n\r\n    case 'incrementCount':\r\n          \r\n            \r\n        let updated_signs = state.signs.map((sign)=>{\r\n            if(action.id === sign.id){\r\n                sign.count = sign.count+1;\r\n            }\r\n            return sign;\r\n         }\r\n        )\r\n        //console.log(updated_signs)\r\n     //   UpdateSign(updated_signs,state.Count+1,state.CategoriesCount);\r\n        return { ...state,signs:updated_signs, Count:state.Count+1 }\r\n        \r\n    case 'decrementCount':\r\n        let Count = state.Count;\r\n        let decremented_signs = state.signs.map((sign)=>{\r\n            if(action.id === sign.id && sign.count >= 1 ){\r\n                sign.count = sign.count-1;\r\n                Count = Count - 1;\r\n              }\r\n                  return sign;\r\n                }\r\n            )\r\n            \r\n     //   UpdateSign(decremented_signs,state.Count,state.CategoriesCount);        \r\n        return { ...state,signs:decremented_signs, Count:Count }\r\n           \r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\n\r\nexport default MainReducer;","import { combineReducers } from 'redux'\r\nimport { firebaseReducer } from 'react-redux-firebase'\r\nimport { firestoreReducer } from 'redux-firestore'\r\nimport MainReducer from './MainReducer'\r\nexport const initialState = {}\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer,\r\n  local:MainReducer,\r\n})\r\n","import { createStore, compose } from 'redux'\r\nimport { reactReduxFirebase } from 'react-redux-firebase'\r\nimport { reduxFirestore } from 'redux-firestore'\r\n\r\n\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\n\r\nimport firebaseConfig from './firebaseConfig'\r\nimport { initialState, rootReducer } from './reducers'\r\n\r\nfirebase.initializeApp(firebaseConfig)\r\n//firebase.firestore().settings({ timestampsInSnapshots: true })\r\n\r\nconst enhancers = [\r\n    reduxFirestore(firebase),\r\n    reactReduxFirebase(firebase, {\r\n      userProfile: 'count-signs',\r\n      useFirestoreForProfile: true,\r\n    }),\r\n  ]\r\n\r\n\r\n  const composedEnhancers = compose(\r\n    ...enhancers\r\n  )\r\n  \r\n  const store = createStore(rootReducer, initialState, composedEnhancers)\r\n  \r\n  \r\n  export default store","import React from 'react';\nimport Main from './components/Main'\n//import store from './reducer/store'\n\nimport store from \"./firebase-redux/store\"\n\nimport { Provider } from 'react-redux';\n\n\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n            <Main />\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}